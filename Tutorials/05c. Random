There is no truly random number.  A computer can generate a pseudo-random number using a random number library, which looks like this:
274984581245010976102157617509191238
It *looks* random and will be useful in a majority of coding you do.

To use it, you have to make a random number generator ONCE per code.
  Random r = new Random();
and then actually generate a number as many times as you like.
  int x = r.nextInt();
  double x = r.nextDouble();
  float x = r.nextFloat();
  boolean x = r.nextBoolean(); //not a number, obviously

You can set boundaries of r.nextInt():
  int x = r.nextInt(100); //will give you a random number between 0 and 99 inclusive.
What if you really wanted it from 1 to 100?
  int x = r.nextInt(100) + 1;
But not
  int x = r.nextInt(100 + 1); //this will give you a random number between 0 and 100 inclusive.

r.nextDouble() and r.nextFloat() have a lower bound of 0.0 and an upper bound of 1.0 inclusive.
What if you really wanted it from 0.0 to 100.0?
  float x = r.nextFloat() * 100;
What if you wanted it from 1.0 to 100?
  float x = r.nextFloat() * 99 + 1;

Once in a while, you want something that is random but repeatable.
We call this a "seed."
If you seed a random number generator and ask it for ten numbers, it will look like ten random numbers.
But if you make a different random number generator, set it to the same seed, and ask it for ten numbers, it will give you the same ten random numbers as above.
You can do this in two ways.  The first way sets the seed upon initialization of Random.
  long seed = 3.0; //a long is a type of variable with a decimal, like double or int.  It can be set to anything.
  Random r = new Random(seed);
Or you can reset the seed of an existing Random.
  long seed = 3.0;
  Random r = new Random();
  r.setSeed(3.0);
